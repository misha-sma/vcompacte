дамп
pg_dump -f vc-2019-09-07.dump -p 5432 -h localhost -U postgres vc

https://o7planning.org/ru/11705/create-a-login-application-with-spring-boot-spring-security-jpa

создание базы
CREATE DATABASE vc ENCODING='UTF8' CONNECTION LIMIT=-1;

--users
create table IF NOT EXISTS users(id_user bigserial PRIMARY KEY, surname varchar(256), name varchar(256), birthday date, phone bigint, email varchar(256), password varchar(256), is_deleted boolean DEFAULT 'f', registration_date timestamp without time zone DEFAULT NOW());

insert into users(surname, name, birthday, phone, email, password) values ('Пупкин', 'Василий', '1980-05-01', 79211234567, 'vpupkin', '$2a$10$1RS/LcSkvdtXlFYNEbVUQeEUE.YC/te3cQCmWWclsKyTX3/VrDKnq');
insert into users(surname, name, birthday, phone, email, password) values ('Иванов', 'Михаил', '1983-12-31', 79211234560, 'misha', '$2a$10$Khv/H/62TUmXdvcU81l27ecA9Gwy7TY.X3O1eJBzsQto4ckLM8DFe');

--roles
create table IF NOT EXISTS roles(id_role int PRIMARY KEY, role_name varchar(20));
insert into roles(id_role, role_name) values (1, 'ROLE_USER');

--users_roles
create table users_roles(id_user bigint, id_role int);
ALTER TABLE users_roles ADD CONSTRAINT fk_user FOREIGN KEY (id_user) REFERENCES users(id_user);
ALTER TABLE users_roles ADD CONSTRAINT fk_role FOREIGN KEY (id_role) REFERENCES roles(id_role);
insert into users_roles(id_user, id_role) values (1, 1);
insert into users_roles(id_user, id_role) values (2, 1);

alter table users_roles add column id_user_role bigserial primary key;

server.servlet.session.timeout=2m

create table IF NOT EXISTS persistent_logins(username varchar(256) not null, series varchar(64) not null primary key, token varchar(64) not null, last_used timestamp without time zone not null);

--friends
vc=# create table IF NOT EXISTS friends(id_friend bigserial primary key, id_user_1 bigint, id_user_2 bigint, is_new boolean);
CREATE TABLE
vc=# ALTER TABLE friends ADD CONSTRAINT fk_user_1 FOREIGN KEY (id_user_1) REFERENCES users(id_user);
ALTER TABLE
vc=# ALTER TABLE friends ADD CONSTRAINT fk_user_2 FOREIGN KEY (id_user_2) REFERENCES users(id_user);

--селект на айдишники друзей
select f1.id_user_2 from friends as f1 inner join friends as f2 on f1.id_user_1=1 and f1.id_user_2=f2.id_user_1 and f2.id_user_2=1;

--селект айдишников тех людей на которых человек подписан
select id_user_2 from (select f1.id_user_2, f2.id_user_1 from (select id_user_2 from friends where id_user_1=1) as f1 left join friends as f2 on f1.id_user_2=f2.id_user_1 and f2.id_user_2=1) as t where t.id_user_1 is null;

--селект айдишников людей которые подписаны на данного человека
select id_user_1 from (select * from (select id_user_2 from friends where id_user_1=1) as f1 right join (select id_user_1 from friends where id_user_2=1) as f2 on f1.id_user_2=f2.id_user_1) as t where t.id_user_2 is null;






